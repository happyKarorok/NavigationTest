env:
  DEBUG: Debug
  QA: Qa
  RELEASE: Release
on:
  workflow_dispatch:
    inputs:
      release_note:
        description: '출시 노트 작성해주세요.'
        required: true
        default: "헤헤"
        type: string

      choice_testers:
        description: '테스터 그룹을 선택하여주세요.'
        required: true
        default: 'dev-dev'
        type: choice
        options:
        - 하하하호호호
        - dev-dev

      choice_build_flavor:
        description: 'Build Type을 선택하여주세요.'
        required: true
        type: choice
        options:
          - ${{ env.DEBUG }}
          - ${{ env.RELEASE }}

name: demo (Branch) App distribution

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
      - uses: actions/setup-node@v1 # This is optional on linux and macOS
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Fetch credential file from secrets
        id: fetch_credential_file
        uses: timheuer/base64-to-file@v1
        with:
          encodedString: ${{ secrets.CREDENTIAL_FILE }}
          fileName: 'credential_file.json'

      - name: build release
        run: ./gradlew assembleDebug

      - name: Upload artifact to Firebase Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.4.0
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE }}
          groups: ${{ github.event.inputs.choice_testers }}
          releaseNotes: ${{ github.event.inputs.release_note }}
          file: app/build/outputs/apk/debug/app-debug.apk


  runAppDistributionDebug:
    needs: run
    runs-on: ubuntu-latest
      if: github.event.inputs.choice_build_flavor == env.DEBUG
      steps:
      - name: build release
        run: ./gradlew assembleDebug

      - name: Upload artifact to Firebase Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.4.0
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE }}
          groups: ${{ github.event.inputs.choice_testers }}
          releaseNotes: ${{ github.event.inputs.release_note }}
          file: app/build/outputs/apk/debug/app-debug.apk

  runAppDistributionRelease:
    needs: run
    runs-on: ubuntu-latest
      if: github.event.inputs.choice_build_flavor == env.RELEASE
      steps:
      - name: build release
        run: ./gradlew assembleRelease

      - name: Upload artifact to Firebase Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.4.0
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE }}
          groups: ${{ github.event.inputs.choice_testers }}
          releaseNotes: ${{ github.event.inputs.release_note }}
          file: app/build/outputs/apk/debug/app-debug.apk